apiVersion: sonataflow.org/v1alpha08
kind: SonataFlowPlatform
metadata:
  name: backstage-sonataflow-platform
spec:
  monitoring:
    enabled: false
  build:
    template:
      resources:
        requests:
          memory: "64Mi"
          cpu: "250m"
        limits:
          memory: "128Mi"
          cpu: "500m"
  services:
    dataIndex:
      enabled: true
      persistence:
        postgresql:
          secretRef:
            name: postgres-credentials
            userKey: POSTGRES_USER
            passwordKey: POSTGRES_PASSWORD
          jdbcUrl: jdbc:postgresql://orchestrator-postgres:5432/sonataflow?currentSchema=data-index-service
    jobService:
      enabled: true
      persistence:
        postgresql:
          secretRef:
            name: postgres-credentials
            userKey: POSTGRES_USER
            passwordKey: POSTGRES_PASSWORD
          jdbcUrl: jdbc:postgresql://orchestrator-postgres:5432/sonataflow?currentSchema=jobs-service
---
apiVersion: batch/v1
kind: Job
metadata:
  name: backstage-create-sonataflow-database
spec:
  activeDeadlineSeconds: 120
  template:
    spec:
      initContainers:
        - name: wait-for-db
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
          image: "registry.redhat.io/rhel8/postgresql-13:latest"
          resources:
            limits:
              cpu: "100m"
              memory: "64Mi"
            requests:
              cpu: "50m"
              memory: "32Mi"
          command:
            - bash
            - -c
            - |
              until timeout 2 bash -c ">/dev/tcp/${POSTGRES_HOST}/${POSTGRES_PORT}"; do
                echo 'Waiting for DB...'
                sleep 2
              done
              echo 'Connection made!'
          env:
            - name: POSTGRES_HOST
              value: orchestrator-postgres.backstage.svc.cluster.local
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: POSTGRES_PORT
      containers:
      - name: psql
        image: "registry.redhat.io/rhel8/postgresql-13:latest"
        resources:
          limits:
            cpu: "100m"
            memory: "128Mi"
          requests:
            cpu: "100m"
            memory: "64Mi"
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
        env:
          - name: POSTGRES_HOST
            value: orchestrator-postgres.backstage.svc.cluster.local
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: POSTGRES_USER
          - name: POSTGRES_PORT
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: POSTGRES_PORT
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: POSTGRES_PASSWORD
        command: [ "sh", "-c" ]
        args:
          - "psql -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USER} -c 'CREATE DATABASE sonataflow;' || echo WARNING: Could not create database"
      restartPolicy: Never
  backoffLimit: 2