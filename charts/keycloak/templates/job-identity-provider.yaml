# apiVersion: batch/v1
# kind: Job
# metadata:
#   name: "sync-identity-provider"
# spec:
#   template:
#     spec:
#       containers:
#       - name: "sync-identity-provider-job"
#         image: "registry.ci.openshift.org/ci/rosa-aws-cli:latest"
#         command: ["/bin/bash", "-c"]
#         args:
#           - |
#             rosa version;
#             rosa login --token=$ROSA_TOKEN;

#             CLUSTER_NAME="{{ .Values.cluster.name }}";
#             IDP_NAME="openshift";
#             ISSUER_URL="https://keycloak-keycloak.{{ .Values.domain }}/auth/realms/openshift";

#             if ! rosa list idps --cluster "$CLUSTER_NAME" | grep -q "$IDP_NAME"; then
#               echo "Identity provider $IDP_NAME does not exist. Adding it...";
#               rosa create idp \
#                 --cluster "$CLUSTER_NAME" \
#                 --name "$IDP_NAME" \
#                 --type "openid" \
#                 --client-id "$CLIENT_ID" \
#                 --client-secret "$CLIENT_SECRET" \
#                 --issuer-url "$ISSUER_URL" \
#                 --mapping-method "claim" \
#                 --email-claims "email" \
#                 --name-claims "name" \
#                 --groups-claims "groups" \
#                 --username-claims "preferred_username" \
#                 --region "{{ .Values.cluster.region }}";
#               echo "Identity provider $IDP_NAME added successfully.";
#             else
#               echo "Identity provider $IDP_NAME already exists. Skipping addition.";
#             fi
#         envFrom:
#           - secretRef:
#               name: rosa-token
#           - secretRef:
#               name: keycloak-client-secret-openshift
#         volumeMounts:
#           - name: ephemeral-storage
#             mountPath: /.config
#       restartPolicy: Never
#       volumes:
#         - name: ephemeral-storage
#           emptyDir: {}