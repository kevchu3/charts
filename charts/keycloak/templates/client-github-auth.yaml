apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: github-auth
  namespace: keycloak
spec:
  client:
    clientId: github-auth
    surrogateAuthRequired: false
    enabled: true
    clientAuthenticatorType: client-secret
    secret: "XXXXXXXXXXXXXXXXXX"
    redirectUris: []
    webOrigins: []
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: false
    implicitFlowEnabled: false
    directAccessGrantsEnabled: false
    serviceAccountsEnabled: true
    publicClient: false
    frontchannelLogout: false
    protocol: openid-connect
    attributes:
      access.token.lifespan: "900"
      saml.force.post.binding: "false"
      saml.multivalued.roles: "false"
      frontchannel.logout.session.required: "false"
      oauth2.device.authorization.grant.enabled: "false"
      backchannel.logout.revoke.offline.tokens: "false"
      saml.server.signature.keyinfo.ext: "false"
      use.refresh.tokens: "false"
      oidc.ciba.grant.enabled: "false"
      backchannel.logout.session.required: "false"
      client_credentials.use_refresh_token: "false"
      require.pushed.authorization.requests: "false"
      saml.client.signature: "false"
      saml.allow.ecp.flow: "false"
      id.token.as.detached.signature: "false"
      saml.assertion.signature: "false"
      client.secret.creation.time: "1737646488"
      saml.encrypt: "false"
      saml.server.signature: "false"
      exclude.session.state.from.auth.response: "false"
      saml.artifact.binding: "false"
      saml_force_name_id_format: "false"
      acr.loa.map: "{}"
      tls.client.certificate.bound.access.tokens: "false"
      saml.authnstatement: "false"
      display.on.consent.screen: "false"
      token.response.type.bearer.lower-case: "false"
      saml.onetimeuse.condition: "false"
    fullScopeAllowed: true
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: Client Host
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: Client IP Address
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: Client ID
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
    defaultClientScopes:
      - web-origins
      - acr
      - roles
      - profile
      - email
    optionalClientScopes:
      - address
      - phone
      - offline_access
      - microprofile-jwt
  realmSelector:
    matchLabels:
      app: keycloak
  roles: []
