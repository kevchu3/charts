{{ if .Values.gitlab.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gitlab-service
  namespace: "{{ .Values.gitops.namespace }}"
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
spec:
  destination:
    namespace: "{{ .Values.gitlab.namespace }}"
    server: https://kubernetes.default.svc
  source:
    chart: gitlab
    targetRevision: "{{ .Values.gitlab.chartVersion }}"
    repoURL: "https://poc-examples.github.io/charts"
    helm:
      parameters:
        - name: namespace
          value: "{{ .Values.gitlab.namespace }}"
        - name: domain
          value: apps.{{ .Values.domain }}
  project: system
  syncPolicy:
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 30s
    automated:
      prune: true
      selfHeal: true
    managedNamespaceMetadata:
      labels:
        argocd.argoproj.io/managed-by: "{{ .Values.gitops.namespace }}"
    syncOptions:
      - CreateNamespace=true
      - Validate=false
{{ end }}

# {{ if .Values.gitlab.enabled }}
# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: gitlab-service
#   namespace: "{{ .Values.gitops.namespace }}"
#   annotations:
#     argocd.argoproj.io/sync-wave: "-2"
# spec:
#   destination:
#     namespace: "{{ .Values.gitlab.namespace }}"
#     server: https://kubernetes.default.svc
#   source:
#     chart: gitlab
#     targetRevision: "{{ .Values.vault.chartVersion }}"
#     repoURL: 'https://charts.gitlab.io/'
#     helm:
#       valuesObject:
#         certmanager:
#           install: true
#         certmanager-issuer:
#           email: "admin@cluster.local"
#         global:
#           edition: ce
#           hosts:
#             domain: "{{ .Values.domain }}"
#           ingress:
#             class: none
#             annotations:
#               route.openshift.io/termination: edge
#             configureCertmanager: false
#             tls:
#               secretName: null
#   project: system
#   syncPolicy:
#     retry:
#       limit: 10
#       backoff:
#         duration: 5s
#         factor: 2
#         maxDuration: 30s
#     automated:
#       prune: true
#       selfHeal: true
#     managedNamespaceMetadata:
#       labels:
#         argocd.argoproj.io/managed-by: "{{ .Values.gitops.namespace }}"
#     syncOptions:
#       - CreateNamespace=true
#       - Validate=false
# {{ end }}
