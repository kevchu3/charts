{{- if or .Values.keycloak.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: security-config
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
spec:
  goTemplate: true
  goTemplateOptions:
    - "missingkey=error"
  generators:
    - list:
        elements:
        {{- if .Values.keycloak.enabled }}
          - application: keycloak-post-config
            namespace: "keycloak"
            wave: "-1"
            chart: 
              name: ansible-runner
              url: https://poc-examples.github.io/supporting-charts
              version: "0.2.6"
            values: |
              scope: ClusterRole
              runner:
                name: keycloak-post-configure
                namespace: keycloak
                annotations:
                  argocd.argoproj.io/sync-wave: "0"
                envFrom:
                  {{- if or (eq .Values.cluster.type "rosa") (eq .Values.cluster.type "hcp") }}
                  - secretRef:
                      name: rosa-token
                  {{- end }}
                  - secretRef:
                      name: keycloak-client-secret-openshift
                  - secretRef:
                      name: credential-keycloak
              requirements:
                collections:
                  - name: bootstrap.post_operator_configuration
                    source: https://github.com/poc-examples/ansible-collections.git#/bootstrap/post_operator_configuration
                    type: git
                    version: main
                    roles:
                      - name: keycloak
              additionalVars:
              {{- if .Values.shared.enabled }}
                domain: "{{ .Values.shared.domain }}"
              {{- else }}
                domain: "{{ .Values.cluster.domain }}"
              {{- end }}
                cluster_name: "{{ .Values.cluster.name }}"
                region: "{{ .Values.cloud.region }}"
              rules:
                - apiGroups:
                    - ""
                  resources:
                    - "secrets"
                  verbs:
                    - "get" 
                    - "list"
                    - "create"
                    - "patch"
                - apiGroups:
                    - "config.openshift.io"
                  resources:
                    - "infrastructures"
                  verbs:
                    - "get"
                    - "list"
                - apiGroups:
                    - "config.openshift.io"
                  resources:
                    - "oauths"
                  verbs:
                    - "get"
                    - "list"
                    - "update"
                    - "patch"
        {{- end }}
  template:
    metadata:
      name: "{{ `{{ .application }}` }}"
    spec:
      destination:
        namespace: "{{ `{{ .namespace }}` }}"
        server: "https://kubernetes.default.svc"
      source:
        chart: "{{ `{{ .chart.name }}` }}"
        targetRevision: "{{ `{{ .chart.version }}` }}"
        repoURL: "{{ `{{ .chart.url }}` }}"
      project: system
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        managedNamespaceMetadata:
          labels:
            argocd.argoproj.io/managed-by: "{{ .Values.gitops.namespace }}"
        syncOptions:
          - CreateNamespace=true
          - Validate=false
  templatePatch: |
    spec:
      source:
        helm:
        {{ `{{- if (index . "values") }}` }}
          values: |
            {{ `{{- .values | nindent 12 }}` }}
        {{ `{{- end }}` }}
{{- end }}
