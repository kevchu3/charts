apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: container-build-pipeline
spec:
  params:
    - name: IMAGE_NAME
    - name: REGISTRY_HOSTNAME
    - name: REGISTRY_NAMESPACE
    - name: IMAGE_TAG
    - name: GITHUB_REPO
    - name: GITHUB_BRANCH
  workspaces:
    - name: source
    - name: containers
    - name: basic-auth
    - name: registry-credentials
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.GITHUB_REPO)
        - name: revision
          value: $(params.GITHUB_BRANCH)
        - name: sslVerify
          value: 'false'
        - name: noProxy
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
      - name: output
        workspace: source
      - name: basic-auth
        workspace: basic-auth
    - name: buildah
      params:
        - name: IMAGE
          value: 'quay.io/$(params.IMAGE_NAME):$(params.IMAGE_TAG)'
        - name: BUILDER_IMAGE
          value: >-
            registry.redhat.io/rhel8/buildah@sha256:0a86ecbdfbe86e9d225b7fe4b090a0dd6d323f8afdfdf2bd933ff223ddb53320
        - name: STORAGE_DRIVER
          value: vfs
        - name: DOCKERFILE
          value: ./Dockerfile
        - name: BUILD_EXTRA_ARGS
          value: "--authfile /workspace/dockerconfig/.docker/config.json"
        - name: CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'true'
        - name: FORMAT
          value: oci
        - name: SKIP_PUSH
          value: 'false'
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: buildah
      workspaces:
        - name: source
          workspace: source
        - name: dockerconfig
          workspace: registry-credentials





    # - name: container-build
    #   params:
    #     - name: IMAGE_NAME
    #       value: $(params.IMAGE_NAME)
    #     - name: IMAGE_TAG
    #       value: $(params.IMAGE_TAG)
    #   taskRef:
    #     name: podman-build
    #   runAfter: 
    #   - git-clone
    #   workspaces:
    #   - workspace: containers
    #     name: containers
    #   - workspace: source
    #     name: source
    # - name: container-push
    #   params:
    #     - name: IMAGE_NAME
    #       value: $(params.IMAGE_NAME)
    #     - name: IMAGE_TAG
    #       value: $(params.IMAGE_TAG)
    #     - name: REGISTRY_HOSTNAME
    #       value: $(params.REGISTRY_HOSTNAME)
    #     - name: REGISTRY_NAMESPACE
    #       value: $(params.REGISTRY_NAMESPACE)
    #   taskRef:
    #     name: podman-push
    #   runAfter: 
    #   - container-build
    #   workspaces:
    #   - workspace: containers
    #     name: containers
